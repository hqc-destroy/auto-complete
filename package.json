{
<<<<<<< HEAD
    "name": "linter",
    "version": "1.0.0",
    "description": "Fig Autocomplete Spec Linter",
    "scripts": {
<<<<<<< HEAD
        "test": "tsc --noEmit",
        "build": "ts-node-script compiler/compiler.ts",
<<<<<<< HEAD
        "autocomplete": "cp ./specs/*.js ~/.fig/autocomplete/",
=======
        "copy": "func() { cp ./specs/${1}.js ~/.fig/autocomplete/; }; func",
        "copy:all": "cp ./specs/*.js ~/.fig/autocomplete/",
        "watch": "fig settings autocomplete.developerMode true && fig settings autocomplete.devCompletionsFolder $(pwd)/specs && ts-node-dev --respawn -s --exit-child --watch ./dev/ compiler/compiler.ts 'INVALIDATE_CACHE' && echo 'Dev mode disabled'; fig settings autocomplete.developerMode false",
        "create-boilerplate": "ts-node-script compiler/cli.ts",
<<<<<<< HEAD
>>>>>>> b12eaeb... updated npm watch but we are loading completion spec every single time
=======
        "dev": "source scripts/dev.sh",
        "test": "tsc --noEmit && echo 'All specs passed validation. You are ready to push!'",
        "copy": "func() { mkdir -p ~/.fig/autocomplete/$(dirname ${1}.js); cp \"$(pwd)\"/specs/${1}.js ~/.fig/autocomplete/${1}.js; }; func",
        "copy:all": "rsync -a --include '*/' --include '*.js' --exclude '*' $(pwd)/specs/ ~/.fig/autocomplete/",
        "create-boilerplate": "./scripts/create-boilerplate.sh",
        "create-example": "./scripts/create-example.sh",
        "build": "ts-node-script scripts/compiler.ts",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 60387c2... new dev mode all working
        "lint": "eslint './dev/*.ts'",
=======
        "lint": "eslint '**/*.ts'",
<<<<<<< HEAD
>>>>>>> 586bbe2... feat: also lint & prettier compiler stuff
=======
        "lint": "eslint '*/*.{ts,js}'",
>>>>>>> 02ea794... added some more logic to eslint and changed the glob so we only lint files in the dev/ specs/ and scripts/ folders
        "lint:fix": "npm run lint -- --fix"
    },
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged"
        }
=======
=======
        "lint": "eslint '*/*.ts'",
>>>>>>> 4b2d2b1... changed lint from ** to *, renamed fig linter plugin for eslint
=======
        "lint": "eslint '**/*.ts'",
>>>>>>> 533326d... feat: allow nesting in folders
        "lint:fix": "npm run lint -- --fix",
=======
        "lint": "eslint '**/*.ts' && npx prettier --check '**/*.ts'",
        "lint:fix": "eslint '**/*.ts' --fix && npx prettier --write '**/*.ts'",
>>>>>>> e092879... Add prettier to npm scripts
        "prepare": "husky install"
>>>>>>> e0d36d3... feat: add husky
    },
    "fig": {
        "dev": {
            "description": "Watching and compile .ts files in ./dev",
            "icon": "fig://template?badge=ðŸ› ",
            "priority": 100
        },
        "create-boilerplate": {
            "description": "Create a new completion spec"
        },
        "create-example": {
            "description": "Create a dummy git completion spec"
        },
        "test": {
            "description": "Typecheck all .ts files in /dev"
        },
        "copy": {
            "description": "Copy a CLI completion spec to ~/.fig/autocomplete"
        },
        "copy:all": {
            "description": "Copy all files from /specs to ~/.fig/autocomplete"
        },
        "build": {
            "description": "Compile all files in /dev"
        },
        "lint": {
            "description": "Check for linting issues"
        },
        "lint:fix": {
            "description": "Fix linting issues"
        },
        "prepare": {
            "description": "Install husky"
        }
    },
    "prettier": {
        "trailingComma": "es5",
        "printWidth": 80
    },
    "lint-staged": {
<<<<<<< HEAD
        "*.{ts,js}": [
=======
        "*.ts": [
<<<<<<< HEAD
>>>>>>> 6e8f5f9... test again
            "eslint --fix"
=======
            "eslint --fix",
<<<<<<< HEAD
            "prettier --write --ignore-unknown"
>>>>>>> 43ede29... fix: add prettier to lint-staged
=======
            "npx prettier --write --ignore-unknown"
>>>>>>> e092879... Add prettier to npm scripts
        ]
    },
    "author": "",
    "license": "ISC",
    "devDependencies": {
        "@types/node": "^14.14.33",
        "@types/progress": "^2.0.3",
        "@typescript-eslint/eslint-plugin": "^4.18.0",
        "@typescript-eslint/parser": "^4.18.0",
        "chalk": "^4.1.0",
<<<<<<< HEAD
        "danger": "^10.6.4",
=======
        "chokidar": "^3.5.1",
>>>>>>> 33f3735... feat: only transpile dirty files
        "eslint": "^7.22.0",
        "eslint-config-prettier": "^8.1.0",
        "eslint-plugin-fig-linter": "file:scripts/eslint-plugin-fig-linter",
        "eslint-plugin-prettier": "^3.3.1",
<<<<<<< HEAD
        "husky": "^4.3.8",
=======
        "husky": "^6.0.0",
<<<<<<< HEAD
        "inquirer": "^8.0.0",
>>>>>>> e0d36d3... feat: add husky
=======
>>>>>>> a1524da... feat: remove inquirer and create cli in bash
        "lint-staged": "^10.5.4",
        "prettier": "2.2.1",
        "progress": "^2.0.3",
        "ts-node": "^9.1.1",
        "typescript": "^4.2.3"
    }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
  "name": "linter",
  "version": "1.0.0",
  "description": "Fig Autocomplete Spec Linter",
  "scripts": {
    "test": "tsc --noEmit",
    "build": "ts-node-script compiler/compiler.ts",
    "copy": "func() { cp ${1} ~/.fig/autocomplete/; }; func",
    "copy:all": "cp ./specs/*.js ~/.fig/autocomplete/",
    "watch": "ts-node-dev --respawn -s --watch ./dev/ compiler/compiler.ts",
    "create-boilerplate": "ts-node-script compiler/cli.ts"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/inquirer": "^7.3.1",
    "@types/node": "^14.14.33",
    "@types/progress": "^2.0.3",
    "chalk": "^4.1.0",
    "inquirer": "^8.0.0",
    "progress": "^2.0.3",
    "ts-node": "^9.1.1",
    "ts-node-dev": "^1.1.6",
    "typescript": "^4.2.3"
  }
>>>>>>> b71937f... feat: add watcher
}
=======
}
>>>>>>> b12eaeb... updated npm watch but we are loading completion spec every single time
=======
}
>>>>>>> c18bea5... fix: prettier fix files
=======
}
>>>>>>> 6cda305... feat: have npm scripts generator read "fig" field from package.json
=======
}
>>>>>>> 43ede29... fix: add prettier to lint-staged
